datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  avatar        String?
  bio           String?
  role          String    @default("user")  // "admin" | "user"
  specialties   String    // 原始的擅长描述
  needs         String    // 原始的需求描述
  skillTags     Tag[]     @relation("UserSkills")     // 擅长的标签
  needTags      Tag[]     @relation("UserNeeds")      // 需求的标签
  badges        Badge[]   @relation("UserBadges")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  comments      Comment[]
}

model Tag {
  id           String   @id @default(cuid())
  name         String   @unique
  level        Int     @default(1)
  parentId     String?   // 父级标签ID
  parent       Tag?      @relation("TagHierarchy", fields: [parentId], references: [id])
  children     Tag[]     @relation("TagHierarchy")
  skillUsers   User[]    @relation("UserSkills")    // 拥有此技能的用户
  needUsers    User[]    @relation("UserNeeds")     // 需要此技能的用户
  products     Product[] @relation("ProductTags")   // 相关产品
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@index([parentId])
}

model Badge {
  id          String   @id @default(cuid())
  name        String
  description String
  imageUrl    String
  type        String   // 'course' | 'participation'
  users       User[]   @relation("UserBadges")
}

model Product {
  id          String    @id @default(cuid())
  title       String
  description String
  platform    Platform  @relation(fields: [platformId], references: [id])
  platformId  String
  platformUrl String    // 外部平台的链接
  imageUrl    String?
  qrCode      String?   // 微信群二维码
  syllabus    Json?     // 课程大纲
  tags        Tag[]     @relation("ProductTags")
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  messages    GroupMessage[]

  @@index([platformId])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([productId])
}

model Platform {
  id        String    @id @default(cuid())
  name      String    @unique    // 平台名称
  icon      String               // 平台图标
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model GroupMessage {
  id        String   @id @default(cuid())
  content   String   @db.Text
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}